import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Footer } from "../components/layouts/footer";
import Navbar from "../components/navbar";
import { ToasterProvider } from "../components/ui/toaster";
import { UserProvider } from "../context/user-context";
import { ThemeProvider } from "next-themes";
import { MotionMain } from "../components/motion-wrapper";
import ContextProvider from "@/context/index";
import { headers } from "next/headers";
import { getServerSession } from "next-auth";
import { authOptions } from "./api/auth/[...nextauth]/route";
import { ClientSessionProvider } from "../components/providers/session-provider";
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const headersObj = await headers();
  const cookies = headersObj.get("cookie");
  const session = await getServerSession(authOptions);
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ClientSessionProvider session={session}>
          <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >
            <ContextProvider cookies={cookies}>
              <UserProvider session={session}>
                <ToasterProvider>
                  <div className="flex min-h-screen flex-col">
                    <Navbar />

                    <MotionMain
                      className="flex-1"
                      initial={{ opacity: 0 }}
                      animate={{ opacity: 1 }}
                      transition={{ duration: 0.5 }}
                    >
                      {children}
                    </MotionMain>

                    <Footer />
                  </div>
                </ToasterProvider>
              </UserProvider>
            </ContextProvider>
          </ThemeProvider>
        </ClientSessionProvider>
      </body>
    </html>
  );
}
